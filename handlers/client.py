from aiogram import types, Dispatcher
from config import admin
from handlers.commands import set_not_admins_commands, set_reg_commands
from keyboards.client_kb import type_markup

async def start_handler(message: types.Message):
    if message.from_user.id not in admin:
        if message.text == "/start" or str(message.text).startswith("/start"):
            await message.answer(
                f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}ü§ó! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!"
                f"\n–Ø –±–æ—Ç –ø–æ–º–æ—à–Ω–∏–∫ Finance. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ —Å—á–µ—Ç /reg",
                reply_markup=type_markup
            )
            await set_reg_commands(message.bot, message.from_user.id)


async def info_handler(message: types.Message):
    if message.from_user.id not in admin:
        if message.text == "/info" or str(message.text).startswith("/info"):
            await message.answer(
                f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}ü§ó!"
                f"\n–Ø –±–æ—Ç –ø–æ–º–æ—à–Ω–∏–∫ Finance. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ —Å—á–µ—Ç /reg"
                f"\n–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –±–æ—Ç."
                f"\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã —Ç–æ –Ω–∞–ø–∏—à–µ—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä +996778116934"
            )
async def invests_handler(message: types.Message):
    if message.text == "/invests":
        pass
        

def register_message_handler_client(dp: Dispatcher):
    dp.register_message_handler(start_handler, commands=["start"])
    dp.register_message_handler(info_handler, commands=["info"])